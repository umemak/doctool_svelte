// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  password  String
  articles  Article[]
  comments  Comment[]
  likes     Like[]
  reviews   Review[]
}

model Article {
  id             String    @id @default(cuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  title          String
  description    String
  author         User      @relation(fields: [authorId], references: [id])
  authorId       String
  path           String
  allow_external Boolean   @default(false)
  tags           Tag[]
  tagId          String?
  comments       Comment[]
  likes          Like[]
  reviews        Review[]
}

model Tag {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    @unique
  articles  Article[]
}

model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  body      String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  article   Article  @relation(fields: [articleId], references: [id])
  articleId String
}

model Like {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  article   Article  @relation(fields: [articleId], references: [id])
  articleId String
}

model Review {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  body       String
  article    Article  @relation(fields: [articleId], references: [id])
  articleId  String
  reviewer   User     @relation(fields: [reviewerId], references: [id])
  reviewerId String
  approved   Boolean  @default(false)
}
