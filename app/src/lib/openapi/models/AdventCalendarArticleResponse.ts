/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AdventCalendarArticleResponse
 */
export interface AdventCalendarArticleResponse {
    /**
     * 
     * @type {string}
     * @memberof AdventCalendarArticleResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AdventCalendarArticleResponse
     */
    adventCalendarId: string;
    /**
     * 
     * @type {number}
     * @memberof AdventCalendarArticleResponse
     */
    day: number;
    /**
     * 
     * @type {string}
     * @memberof AdventCalendarArticleResponse
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof AdventCalendarArticleResponse
     */
    articleId: string;
    /**
     * 
     * @type {string}
     * @memberof AdventCalendarArticleResponse
     */
    authorId: string;
    /**
     * 
     * @type {Date}
     * @memberof AdventCalendarArticleResponse
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AdventCalendarArticleResponse
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AdventCalendarArticleResponse
     */
    deletedAt: Date | null;
}

/**
 * Check if a given object implements the AdventCalendarArticleResponse interface.
 */
export function instanceOfAdventCalendarArticleResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "adventCalendarId" in value;
    isInstance = isInstance && "day" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "articleId" in value;
    isInstance = isInstance && "authorId" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "deletedAt" in value;

    return isInstance;
}

export function AdventCalendarArticleResponseFromJSON(json: any): AdventCalendarArticleResponse {
    return AdventCalendarArticleResponseFromJSONTyped(json, false);
}

export function AdventCalendarArticleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdventCalendarArticleResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'adventCalendarId': json['advent_calendar_id'],
        'day': json['day'],
        'title': json['title'],
        'articleId': json['article_id'],
        'authorId': json['author_id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'deletedAt': (json['deleted_at'] === null ? null : new Date(json['deleted_at'])),
    };
}

export function AdventCalendarArticleResponseToJSON(value?: AdventCalendarArticleResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'advent_calendar_id': value.adventCalendarId,
        'day': value.day,
        'title': value.title,
        'article_id': value.articleId,
        'author_id': value.authorId,
        'created_at': (value.createdAt.toISOString()),
        'updated_at': (value.updatedAt.toISOString()),
        'deleted_at': (value.deletedAt === null ? null : value.deletedAt.toISOString()),
    };
}

